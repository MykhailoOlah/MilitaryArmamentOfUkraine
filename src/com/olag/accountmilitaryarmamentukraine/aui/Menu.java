package com.olag.accountmilitaryarmamentukraine.aui;

import com.olag.accountmilitaryarmamentukraine.domain.AuthorizationService;
import com.olag.accountmilitaryarmamentukraine.domain.RegisterService;
import com.olag.accountmilitaryarmamentukraine.persistence.GunsDao;
import com.olag.accountmilitaryarmamentukraine.persistence.UserDAO;
import java.util.Optional;
import java.util.Scanner;


/**
 * –ö–ª–∞—Å Menu –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î —Å–æ–±–æ—é –º–µ–Ω—é –¥–ª—è –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª–æ–º –ø—Ä–æ–≥—Ä–∞–º–∏ –∑ –æ–±–ª—ñ–∫—É –≤—ñ–π—Å—å–∫–æ–≤–æ–≥–æ –æ–∑–±—Ä–æ—î–Ω–Ω—è –£–∫—Ä–∞—ó–Ω–∏.
 */
public class Menu {

    private static final GunsDao gunsDao = new GunsDao();
    private static final Scanner scanner = new Scanner(System.in);

    /**
     * –ú–µ—Ç–æ–¥ startMenu –≤–∏–≤–æ–¥–∏—Ç—å –ø–æ—á–∞—Ç–∫–æ–≤–µ –º–µ–Ω—é —Ç–∞ –æ–±—Ä–æ–±–ª—è—î –≤–∏–±—ñ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ –ø—Ä–æ–≥—Ä–∞–º–∏.
     */
    public static void startMenu() {
        int menuChoice = 0;
        Scanner choice = new Scanner(System.in);
        do {
            System.out.println();
            System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n"
                  + "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n"
                  + "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†â‚†Ä  ‚†Ä       ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n"
                  + "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£§‚£∂‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ü‚£Ä‚£¥‚£ø‚£ø‚£≠‚£≠‚£≠‚£≠‚£ø‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£¥‚£Ø‚£ß‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£§\n"
                  + "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ø‚†ø‚†ü‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â\n"
                  + "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£π‚£ø‚£ø‚°ü‚†ã‚¢Å‚£¥‚£ø‚°ø‚†õ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n"
                  + "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°è‚†Ä‚†Ä‚°ø‚†ø‚¢Ä‚£¥‚£ø‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n"
                  + "‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚£§‚£§‚£∂‚£ø‚£ø‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n"
                  + "‚†Ä‚†Ä‚†Ä‚†Ä‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n"
                  + "‚†Ä  ‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚£ô‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n");
            System.out.println("‚Ä¢ “â‚îÄ‚ï§‚ï¶Ô∏ª\uD83D\uDFE8\uD83D\uDFE6–†–∞–¥–∏–π –≤—ñ—Ç–∞—Ç–∏ –≤ –±–ª—ñ–∫—É –≤—ñ–π—Å—å–∫–æ–≤–æ–≥–æ –æ–∑–±—Ä–æ—î–Ω–Ω—è –£–∫—Ä–∞—ó–Ω–∏\uD83D\uDFE6\uD83D\uDFE8Ô∏ª‚ï¶‚ï§‚îÄ“â ‚Ä¢");
            System.out.println("[1] –ê–≤—Ç–æ—Ä–∏–∑–∞—Üi—è\uD83D\uDC68\uD83C\uDFFC\u200D\uD83D\uDCBB");
            System.out.println("[2] –†–µ—î—Å—Ç—Ä–∞—Üi—è\uD83D\uDCDD");
            System.out.println("[3] –ü–µ—Ä–µ–≥–ª—è–¥ —Å–ø–∏—Å–∫—É –∑–±—Ä–æ—ó\uD83D\uDC40");
            System.out.println("[4] –í–∏—Öi–¥\uD83D\uDEAA\uD83D\uDEB6\uD83C\uDFFC");
            while (!choice.hasNextInt()) {
                System.out.println("–í–≤–µ–¥–µ–Ω–æ —Ö–∏–±–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ.");
                choice.next();
            }

            menuChoice = choice.nextInt();

            switch (menuChoice) {
                case 1:
                    AuthorizationService.authorization();
                    break;
                case 2:
                    RegisterService.registration();
                    break;
                case 3:
                    GunsFunctional gunsFunctional = new GunsFunctional();
                    gunsFunctional.viewAllGuns();
                    break;
                case 4:
                    System.out.println("–î—è–∫—É—î–º–æ —â–æ —Å–∫–æ—Ä–∏—Å—Ç–∞–ª–∏—Å—è –Ω–∞—à–∏–º–∏ –ø–æ—Å–ª—É–≥–∞–º–∏. –°–ª–∞–≤–∞ –£–∫—Ä–∞—ó–Ω—ñ\uD83D\uDFE6\uD83D\uDFE8");
                    System.exit(4);
                    break;
                default:
                    System.out.println("–í–≤–µ–¥–µ–Ω–æ —Ö–∏–±–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–µ —á–∏—Å–ª–æ.");
                    break;
            }
        } while (menuChoice != 4);
    }

    /**
     * –ú–µ—Ç–æ–¥ mainMenu –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –ø—Ä–æ–≥—Ä–∞–º–∏, –¥–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–æ–∂–µ –≤–∏–±–∏—Ä–∞—Ç–∏ –æ–ø—Ü—ñ—ó.
     *
     * @param userName –Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –¥–ª—è —è–∫–æ–≥–æ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é.
     */
    public static void mainMenu(String userName) {
        int menuChoice = 0;
        GunsFunctional gunsFunctional = new GunsFunctional();
        UserDAO userDAO = new UserDAO();

        do {
            System.out.println();
            System.out.println("‚Ä¢ “â‚îÄ‚ï§‚ï¶Ô∏ªüü®üü¶–û–±–ª—ñ–∫ –≤—ñ–π—Å—å–∫–æ–≤–æ–≥–æ –æ–∑–±—Ä–æ—î–Ω–Ω—è –£–∫—Ä–∞—ó–Ω–∏üü¶üü®Ô∏ª‚ï¶‚ï§‚îÄ“â ‚Ä¢");
            System.out.println("[1] –ü–µ—Ä–µ–≥–ª—è–¥ –∑–±—Ä–æ—óüëÄ");
            System.out.println("[2] –ü–æ—à—É–∫ –∑–±—Ä–æ—óüîç");
            System.out.println("[3] –ö–æ—à–∏–∫üõí");
            System.out.println("[4] –í—ñ–¥–≥—É–∫–∏üñäÔ∏è");

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —î –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
            if (isUserAdmin(userName)) {
                System.out.println("[5] –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—èüìù");
                System.out.println("[6] –ù–∞–¥–∞–Ω–Ω—è –ª—ñ—Ü–µ–Ω–∑—ñ—ó‚úÖ");
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–∞—î –ª—ñ—Ü–µ–Ω–∑—ñ—é
            if (userDAO.getLicenseStatusByUsername(userName).orElse(false)) {
                System.out.println("[7] –í–∏—Ö—ñ–¥ –∑ –∞–∫–∞—É–Ω—Ç—Éüö™üö∂üèº");
            } else {
                System.out.println("[7] –í–∏—Ö—ñ–¥ –∑ –∞–∫–∞—É–Ω—Ç—É (–£ –≤–∞—Å –Ω–µ–º–∞—î –ª—ñ—Ü–µ–Ω–∑—ñ—ó –Ω–∞ –∑–±—Ä–æ—é)üö™üö∂üèº");
            }

            try {
                menuChoice = Integer.parseInt(scanner.nextLine());

                ResponseFunctional responseFunctional = new ResponseFunctional();

                switch (menuChoice) {
                    case 1:
                        gunsFunctional.viewAllGuns();
                        break;
                    case 2:
                        gunsFunctional.findGunName();
                        break;
                    case 3:
                        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–∞—î –ª—ñ—Ü–µ–Ω–∑—ñ—é –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º –≤ –∫–æ—à–∏–∫
                        if (userDAO.getLicenseStatusByUsername(userName).orElse(false)) {
                            viewCart(userName);
                        } else {
                            System.out.println("–£ –≤–∞—Å –Ω–µ–º–∞—î –ª—ñ—Ü–µ–Ω–∑—ñ—ó –Ω–∞ –∑–±—Ä–æ—é ( ‡≤†  ñÃØ ‡≤†)‚ï≠‚à©‚ïÆ");
                        }
                        break;
                    case 4:
                        showWorkWithReviews(userName);
                        break;
                    case 5:
                        if (isUserAdmin(userName)) {
                            addedMenu(userName);
                        } else {
                            System.out.println("–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä‚ùå");
                        }
                        break;
                    case 6:
                        if (isUserAdmin(userName)) {
                            responseFunctional.grantLicenseToUser();
                            mainMenu(userName);
                        } else {
                            System.out.println("–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä‚ùå");
                        }
                        break;
                    case 7:
                        System.out.println("–î—è–∫—É—î–º–æ —â–æ —Å–∫–æ—Ä–∏—Å—Ç–∞–ª–∏—Å—è –Ω–∞—à–∏–º–∏ –ø–æ—Å–ª—É–≥–∞–º–∏. –°–ª–∞–≤–∞ –£–∫—Ä–∞—ó–Ω—ñüü°üîµ");
                        startMenu();
                        break;
                    default:
                        System.out.println("–í–≤–µ–¥–µ–Ω–æ —Ö–∏–±–Ω—ñ –¥–∞–Ω—ñ‚ùå. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 7.");
                        break;
                }
            } catch (NumberFormatException e) {
                System.out.println("–í–≤–µ–¥–µ–Ω–æ —Ö–∏–±–Ω—ñ –¥–∞–Ω—ñ‚ùå. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 7.");
            }
        } while (menuChoice != 7);
    }


    private static void showWorkWithReviews(String userName) {
        System.out.println();
        System.out.println("–í—ñ–¥–≥—É–∫–∏\uD83D\uDD8A\uFE0F");
        System.out.println("[1] –í—Å—ñ –≤—ñ–¥–≥—É–∫–∏");
        System.out.println("[2] –î–æ–¥–∞—Ç–∏ –≤—ñ–¥–≥—É–∫");
        System.out.println("[3] –ù–∞–∑–∞–¥");

        int menuChoice = getUserInputAsInt();
        ResponseFunctional responseFunctional = new ResponseFunctional();

        switch (menuChoice) {
            case 1:
                responseFunctional.viewAllResponses();
                showWorkWithReviews(userName);
                break;
            case 2:
                responseFunctional.addResponseFromUserInput(userName);
                showWorkWithReviews(userName);
                break;
            case 3:
                mainMenu(userName);
                break;
            default:
                System.out.println("–í–≤–µ–¥–µ–Ω–æ —Ö–∏–±–Ω—ñ –¥–∞–Ω—ñ‚ùå");
                break;
        }
    }

    private static void viewCart(String userName) {
        int cartChoice = 0;

        do {
            System.out.println();
            System.out.println("–ö–æ—à–∏–∫\uD83D\uDED2");
            System.out.println("[1] –í–∏–±—Ä–∞—Ç–∏ –∑–±—Ä–æ—é –¥–ª—è –ø–æ–∫—É–ø–∫–∏");
            System.out.println("[2] –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫");
            System.out.println("[3] –ù–∞–∑–∞–¥");

            cartChoice = getUserInputAsInt();
            PurchaseFunctional purchaseFunctional = new PurchaseFunctional();

            switch (cartChoice) {
                case 1:
                    purchaseFunctional.addPurchaseFromUserInput(userName);
                    break;
                case 2:
                    purchaseFunctional.viewPurchase(userName);
                    break;
                case 3:
                    mainMenu(userName);
                    break;
                default:
                    System.out.println("–í–≤–µ–¥–µ–Ω–æ —Ö–∏–±–Ω—ñ –¥–∞–Ω—ñ‚ùå");
                    break;
            }
        } while (cartChoice != 3);
    }


    private static int getUserInputAsInt() {
        while (!scanner.hasNextInt()) {
            System.out.println("–í–≤–µ–¥–µ–Ω–æ —Ö–∏–±–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è‚ùå –í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ!");
            scanner.next();
        }
        int input = scanner.nextInt();
        scanner.nextLine();
        return input;
    }
    private static boolean isUserAdmin(String username) {
        UserDAO userDAO = new UserDAO();
        Optional<String> role = userDAO.getRoleByUsername(username);

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —î –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
        return role.isPresent() && role.get().equalsIgnoreCase("admin");
    }


    private static void addedMenu(String userName) {
        int adminChoice = 0;

        do {
            System.out.println();
            System.out.println("–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è\uD83D\uDCDD");
            System.out.println("[1] –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∑–±—Ä–æ—ó");
            System.out.println("[2] –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –≤—ñ–¥–≥—É–∫—ñ–≤");
            System.out.println("[3] –ù–∞–∑–∞–¥");

            adminChoice = getUserInputAsInt();

            switch (adminChoice) {
                case 1:
                    editWeaponsMenu(userName);
                    break;
                case 2:
                    editReviews(userName);
                    break;
                case 3:
                    mainMenu(userName);
                    break;
                default:
                    System.out.println("–í–≤–µ–¥–µ–Ω–æ —Ö–∏–±–Ω—ñ –¥–∞–Ω—ñ‚ùå");
                    break;
            }
        } while (adminChoice != 3);
    }

    private static void editWeaponsMenu(String userName) {
        int editChoice = 0;

        do {
            System.out.println();
            System.out.println("–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∑–±—Ä–æ—ó\uD83D\uDCDD");
            System.out.println("[1] –î–æ–¥–∞—Ç–∏ –∑–±—Ä–æ—é");
            System.out.println("[2] –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –∑–±—Ä–æ—é");
            System.out.println("[3] –í–∏–¥–∞–ª–∏—Ç–∏ –∑–±—Ä–æ—é");
            System.out.println("[4] –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—Å—é –∑–±—Ä–æ—é");
            System.out.println("[5] –ù–∞–∑–∞–¥");

            editChoice = getUserInputAsInt();
            GunsFunctional gunsFunctional = new GunsFunctional();

            switch (editChoice) {
                case 1:
                    gunsFunctional.addGunFromUserInput();
                    break;
                case 2:
                    gunsFunctional.editGunByName();
                    break;
                case 3:
                    gunsFunctional.deleteGunByName();
                    break;
                case 4:
                    gunsFunctional.viewAllGuns();
                    break;
                case 5:
                    addedMenu(userName);
                    break;
                default:
                    System.out.println("–í–≤–µ–¥–µ–Ω–æ —Ö–∏–±–Ω—ñ –¥–∞–Ω—ñ‚ùå");
                    break;
            }
        } while (editChoice != 5);
    }

    private static void editReviews(String userName) {
        int editChoice = 0;

        do {
            System.out.println();
            System.out.println("–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –≤—ñ–¥–≥—É–∫—ñ–≤\uD83D\uDCDD");
            System.out.println("[1] –î–æ–¥–∞—Ç–∏ –≤—ñ–¥–≥—É–∫");
            System.out.println("[2] –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –≤—ñ–¥–≥—É–∫");
            System.out.println("[3] –í–∏–¥–∞–ª–∏—Ç–∏ –≤—ñ–¥–≥—É–∫");
            System.out.println("[4] –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—Å—ñ –≤—ñ–¥–≥—É–∫–∏");
            System.out.println("[5] –ù–∞–∑–∞–¥");

            editChoice = getUserInputAsInt();

            ResponseFunctional responseFunctional = new ResponseFunctional();

            switch (editChoice) {
                case 1:
                    responseFunctional.addResponseFromUserInput(userName);
                    break;
                case 2:
                    responseFunctional.editResponseByUser(userName);
                    break;
                case 3:
                    responseFunctional.deleteResponseByUser(userName);
                    break;
                case 4:
                    responseFunctional.viewAllResponses();
                    break;
                case 5:
                    addedMenu(userName);
                    break;
                default:
                    System.out.println("–í–≤–µ–¥–µ–Ω–æ —Ö–∏–±–Ω—ñ –¥–∞–Ω—ñ‚ùå");
                    break;
            }
        } while (editChoice != 5);
    }
}